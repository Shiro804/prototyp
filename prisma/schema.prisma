generator client {
    provider = "prisma-client-js"
}

generator zod {
    provider = "zod-prisma-types"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model Resource {
    id            Int         @id @default(autoincrement())
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    name          String?
    active        Boolean     @default(true)
    locationId    Int
    processStepId Int
    Machine       Machine?
    processStep   ProcessStep @relation(fields: [processStepId], references: [id])
    location      Location    @relation(fields: [locationId], references: [id])
    Worker        Worker?
}

model Machine {
    id         Int      @id @default(autoincrement())
    resourceId Int      @unique
    resource   Resource @relation(fields: [resourceId], references: [id])
}

model Worker {
    id          Int          @id @default(autoincrement())
    resourceId  Int          @unique
    resource    Resource     @relation(fields: [resourceId], references: [id])
    workerRoles WorkerRole[] @relation("WorkerToWorkerRole")
}

model WorkerRole {
    id          Int      @id @default(autoincrement())
    name        String   @unique
    description String?
    workers     Worker[] @relation("WorkerToWorkerRole")
}

model Inventory {
    id              Int              @id @default(autoincrement())
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt
    type            String
    limit           Int
    entries         InventoryEntry[]
    processStep     ProcessStep?
    transportSystem TransportSystem?
}

model InventoryEntry {
    id          Int       @id @default(autoincrement())
    addedAt     DateTime  @default(now())
    material    String
    inventoryId Int
    inventory   Inventory @relation(fields: [inventoryId], references: [id])
}

model Location {
    id           Int           @id @default(autoincrement())
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    name         String
    description  String?
    processSteps ProcessStep[]
    resources    Resource[]
}

model ProcessStep {
    id          Int               @id @default(autoincrement())
    createdAt   DateTime          @default(now())
    updatedAt   DateTime          @updatedAt
    name        String
    status      String
    inputSpeed  Int
    outputSpeed Int
    recipeRate  Int               @default(10)
    duration    Int               @default(1)
    locationId  Int
    inventoryId Int               @unique
    recipeId    Int?
    recipe      Recipe?           @relation(fields: [recipeId], references: [id])
    inventory   Inventory         @relation(fields: [inventoryId], references: [id])
    location    Location          @relation(fields: [locationId], references: [id])
    resources   Resource[]
    sensors     Sensor[]
    inputs      TransportSystem[] @relation("stepInputs")
    outputs     TransportSystem[] @relation("stepOutputs")
}

model Recipe {
    id           Int            @id @default(autoincrement())
    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @updatedAt
    name         String
    processSteps ProcessStep[]
    inputs       RecipeInput[]
    outputs      RecipeOutput[]
}

model RecipeInput {
    id       Int     @id @default(autoincrement())
    material String
    quantity Int
    recipeId Int?
    Recipe   Recipe? @relation(fields: [recipeId], references: [id])

    @@unique([material, recipeId])
}

model RecipeOutput {
    id       Int     @id @default(autoincrement())
    material String
    quantity Int
    recipeId Int?
    Recipe   Recipe? @relation(fields: [recipeId], references: [id])
}

model Sensor {
    id            Int         @id @default(autoincrement())
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    name          String
    processStepId Int
    processStep   ProcessStep @relation(fields: [processStepId], references: [id])
}

model FilterEntry {
    id       Int      @id @default(autoincrement())
    addedAt  DateTime @default(now())
    material String
    filterId Int
    filter   Filter   @relation(fields: [filterId], references: [id])
}

model Filter {
    id                Int             @id @default(autoincrement())
    createdAt         DateTime        @default(now())
    updatedAt         DateTime        @updatedAt
    transportSystemId Int             @unique
    transportSystem   TransportSystem @relation(fields: [transportSystemId], references: [id])
    entries           FilterEntry[]
}

model TransportSystem {
    id          Int          @id @default(autoincrement())
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    name        String
    inputSpeed  Int
    outputSpeed Int
    inventoryId Int          @unique
    startStepId Int?
    endStepId   Int?
    filterId    Int?
    filter      Filter?
    endStep     ProcessStep? @relation("stepInputs", fields: [endStepId], references: [id])
    startStep   ProcessStep? @relation("stepOutputs", fields: [startStepId], references: [id])
    inventory   Inventory    @relation(fields: [inventoryId], references: [id])
}
